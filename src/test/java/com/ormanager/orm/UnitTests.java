package com.ormanager.orm;

import com.ormanager.client.entity.Publisher;
import com.ormanager.jdbc.ConnectionToDB;
import com.ormanager.orm.mapper.ObjectMapper;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

class UnitTests {

    private OrmManager ormManager;

    @BeforeEach
    void setUp() throws SQLException {
        ormManager = OrmManager.withPropertiesFrom("src/test/resources/application_test.properties");
    }

    @Test
    void save_ShouldReturnAutoGeneratedIdOfPublisherFromDatabase() throws SQLException, IllegalAccessException {
        //GIVEN
        Publisher publisher = new Publisher("saveTestPdrjsublisher");
        Long expectedId;

        //WHEN
        ormManager.save(publisher);
        try (Connection connection = ConnectionToDB.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement("SELECT * FROM Publishers WHERE id = (SELECT MAX(id) from Publishers);")) {
            preparedStatement.executeQuery();
            ResultSet resultSet = preparedStatement.getResultSet();
            resultSet.next();
            expectedId = resultSet.getLong(1);
        }

        //THEN
        assertEquals(expectedId, publisher.getId());
    }

    @Test
    void save_ShouldReturnPublisherFromDatabase() throws SQLException, IllegalAccessException {
        //GIVEN
        Publisher publisher = new Publisher("test");

        //WHEN
        ormManager.save(publisher);
        try (Connection connection = ConnectionToDB.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement("SELECT * FROM Publishers WHERE id = ?;")) {
            preparedStatement.executeQuery();
            ResultSet resultSet = preparedStatement.getResultSet();
            resultSet.next();
           var expectedId = resultSet.getLong(1);
        }

        //THEN
        //assertEquals(expectedId, publisher.getId());
    }

    @Test
    void save_ShouldReturnAutoGeneratedIdOfPublisherFromDatabase346() throws SQLException, IllegalAccessException {
        //GIVEN
        Publisher publisher = new Publisher("saveTestPublisher");
        List<Publisher> publishers;

        //WHEN
        ormManager.save(publisher);
        try (Connection connection = ConnectionToDB.getConnection()) {
            ResultSet resultSet = connection.createStatement().executeQuery("SELECT * FROM Publishers;");
            publishers = ObjectMapper.mapperToList(resultSet, Publisher.class);
        }

        //THEN
        assertTrue(publishers.size()>0);
        assertEquals(ormManager.findAll(Publisher.class).size(),publishers.size());
    }
}
